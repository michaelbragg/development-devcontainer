# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

version: '3.7'
services:

# ============================================================================ #
# Proxy                                                                        #
# ============================================================================ #

  traefik:
    container_name: "traefik"
    build:
      dockerfile: ./traefik/Dockerfile
      context: .
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.traefik.address=:${PROJECT_TRAEFIK_PORT:-8888}"
      - "--entrypoints.public.address=:${PROJECT_NGINX_PORT:-8080}"
#      - "--entrypoints.public.address=:${PROJECT_NGINX_SSL_PORT:-8433}"
    ports:
      - "${PROJECT_TRAEFIK_PORT:-8888}:8888"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - public
    labels:
      - traefik.enable=true
      - traefik.backend=traefik
      - traefik.docker.network=public
      - traefik.http.services.${COMPOSE_PROJECT_NAME:-develop}_traefik.loadbalancer.server.port=${PROJECT_TRAEFIK_PORT:-8888}
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-develop}_traefik.rule=Host(`traefik.${PROJECT_BASE_URL:-localhost}`)
      # - traefik.frontend.auth.basic=${TRAEFIK_AUTH:-root}

# ============================================================================ #
# Nginx                                                                        #
# ============================================================================ #

  nginx:
    container_name: "nginx"
    build:
      dockerfile: ./nginx/Dockerfile
      context: .
    depends_on:
      - mysql
      - app
    ports:
      - "${PROJECT_NGINX_PORT:-8080}:80"
      # - "${PROJECT_NGINX_PORT:-8433}:433"
    volumes:
      - ../:/var/www/:delegated
    networks:
      public:
        aliases:
          - ${PROJECT_BASE_URL:-localhost}
          - www.${PROJECT_BASE_URL:-localhost}
      private:
    labels:
      - traefik.enable=true
      - traefik.backend=nginx
      - traefik.docker.network=public
      - traefik.http.services.${COMPOSE_PROJECT_NAME:-develop}_nginx.loadbalancer.server.port=${PROJECT_NGINX_PORT:-8080}
      # - traefik.http.services.${COMPOSE_PROJECT_NAME:-develop}_nginx.loadbalancer.server.port=${PROJECT_NGINX_PORT:-8433}
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-develop}_nginx.entrypoints=public
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-develop}_nginx.rule=Host(`www.${PROJECT_BASE_URL:-localhost}`)

# ============================================================================ #
# Application                                                                  #
# ============================================================================ #

  app:
    container_name: "app"
    build:
      dockerfile: ./php/app/Dockerfile
      context: .
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
        PHP_VERSION: ${PROJECT_PHP_VERSION:-8.0}
    env_file:
      - ./.env
    restart: unless-stopped
    extra_hosts:
      - "www.${PROJECT_BASE_URL:-localhost}:172.18.0.1"
    working_dir: ${PROJECT_DIR:-/var/www}
    volumes:
      - ../:/var/www/:cached
      #- code:/var/www
    environment:
      SESSION_DRIVER: redis
      CACHE_DRIVER: redis
      # XDEBUG_ENABLE: 1
      # XDEBUG_MODE: debug
    labels:
        - traefik.enable=false
    networks:
      - public
      - private

  # wpcli:
  #   container_name: "wpcli"
  #   image: wordpress:cli
  #   #restart: on-failure
  #   user: xfs
  #   volumes:
  #     - ../:/var/www/:delegated
  #   #entrypoint: wp
  #   #command: "--info"
  #   networks:
  #     - public
  #     - private
  #   labels:
  #     - traefik.enable=false

  composer:
    container_name: "composer"
    build:
      dockerfile: ./php/composer/Dockerfile
      context: .
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
        PHP_VERSION: ${PROJECT_PHP_VERSION:-8.0}
    working_dir: ${PROJECT_DIR:-/var/www}
    volumes:
      - ../:/var/www/:delegated
    networks:
      - public
      - private
    profiles:
      - dev
    labels:
      - traefik.enable=false

# ============================================================================ #
# Database                                                                     #
# ============================================================================ #

  mysql:
    container_name: "mysql"
    build:
      dockerfile: ./mysql/Dockerfile
      context: .
    volumes:
      - ./database:/var/lib/mysql:delegated
    command: --init-file="/var/lib/mysql/init.sql"
    restart: unless-stopped
    ports:
      - "${PROJECT_MYSQL_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${PROJECT_MYSQL_ROOT_PASSWORD:-root}
      MYSQL_USER: ${PROJECT_MYSQL_USER:-root}
      MYSQL_PASSWORD: ${PROJECT_MYSQL_PASSWORD:-root}
    labels:
      - traefik.enable=false
    networks:
      - private

# ============================================================================ #
# Mail                                                                         #
# ============================================================================ #

  mailhog:
    container_name: "mailhog"
    build:
      dockerfile: ./mailhog/Dockerfile
      context: .
    restart: unless-stopped
    ports:
      - "${PROJECT_MAILHOG_PORT:-8025}:8025"
    networks:
      - public
      - private
    labels:
      - traefik.enable=true
      - traefik.backend=mailhog
      - traefik.docker.network=public
      - traefik.http.services.${COMPOSE_PROJECT_NAME:-develop}_mailhog.loadbalancer.server.port=${PROJECT_MAILHOG_PORT:-8025}
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-develop}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL:-localhost}`)

# ============================================================================ #
# Networks                                                                     #
# ============================================================================ #

networks:
  private:
    external: false
  public:
    external: true

# ============================================================================ #
# Volumes                                                                      #
# ============================================================================ #

# volumes:
#   wordpress: {}
