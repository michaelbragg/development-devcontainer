map $http_host $blogid {
	default       -999;

	#Ref: http://wordpress.org/extend/plugins/nginx-helper/
	#include /var/www/wordpress/wp-content/plugins/nginx-helper/map.conf ;

}

# Docker DNS resolver.
resolver 127.0.0.11 valid=10s;

# PHP
server {
	listen      80;
	listen      [::]:80;
	server_name localhost *.test;
	root        /var/www/public;
	index       index.html index.htm index.php;

	location ~* \.php$ {
			fastcgi_pass   php:9000;
			include        fastcgi_params;
			fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param  SCRIPT_NAME     $fastcgi_script_name;
			fastcgi_buffer_size 128k;
			fastcgi_buffers 4 218k;
			fastcgi_busy_buffers_size 256k;
			fastcgi_read_timeout 300s;
			fastcgi_index index.php;
	}

	#error_page  404              /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page   500 502 503 504  /50x.html;
	#location = /50x.html {
	#	root   /usr/share/nginx/html;
	#}


	# Fallback to live site uploads.
	# location ~ ^/wp-content/uploads/(.*) {
	# 	if (!-e $request_filename){
	# 			rewrite ^/wp-content/uploads/(.*)$ https://wordpress.test/app/uploads/$1 redirect;
	# 	}
	# }

	# location ~ ^/app/uploads/(.*) {
  #   if (!-e $request_filename){
  #       rewrite ^/app/uploads/(.*)$ https://wordpress.test/app/uploads/$1 redirect;
  #   }
	# }

	# Global restrictions configuration file.
	# Designed to be included in any server {} block.
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~ /\. {
		deny all;
	}

	# # Rewrite requests to `/wp-.*` on subdirectory installs.
	# if (!-e $request_filename) {
	# 	rewrite /wp-admin$ $scheme://$host$uri/ permanent;
	# 	rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
	# 	rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
	# }

	# WordPress Permalinks
	location / {
		# include the "?$args" part so non-default permalinks doesn't break when using query string
		try_files $uri $uri/ /index.php?$args;
	}

	#WPMU Files
	location ~ ^/files/(.*)$ {
		try_files /app/blogs.dir/$blogid/$uri /wp/wp-includes/ms-files.php?file=$1 ;
		access_log off; log_not_found off;      expires max;
	}

	#WPMU x-sendfile to avoid php readfile()
	location ^~ /blogs.dir {
		internal;
		alias /var/www/public/app/blogs.dir;
		access_log off;     log_not_found off;      expires max;
	}

	# This should match upload_max_filesize in php.ini
	client_max_body_size 150m;

}

# PHP XDEBUG
server {
	listen      81;
	listen      [::]:81;
	server_name localhost *.test;
	root        /var/www/public;
	index       index.html index.htm index.php;

	location ~* \.php$ {
			fastcgi_pass   php-xdebug:9000;
			include        fastcgi_params;
			fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param  SCRIPT_NAME     $fastcgi_script_name;
			fastcgi_buffer_size 128k;
			fastcgi_buffers 4 218k;
			fastcgi_busy_buffers_size 256k;
			fastcgi_read_timeout 3600s;
			fastcgi_index index.php;
	}

	#error_page  404              /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page   500 502 503 504  /50x.html;
	#location = /50x.html {
	#	root   /usr/share/nginx/html;
	#}


	# Fallback to live site uploads.
	# location ~ ^/wp-content/uploads/(.*) {
	# 	if (!-e $request_filename){
	# 			rewrite ^/wp-content/uploads/(.*)$ https://wordpress.test/app/uploads/$1 redirect;
	# 	}
	# }

	# location ~ ^/app/uploads/(.*) {
  #   if (!-e $request_filename){
  #       rewrite ^/app/uploads/(.*)$ https://wordpress.test/app/uploads/$1 redirect;
  #   }
	# }

	# Global restrictions configuration file.
	# Designed to be included in any server {} block.
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~ /\. {
		deny all;
	}

	# # Rewrite requests to `/wp-.*` on subdirectory installs.
	# if (!-e $request_filename) {
	# 	rewrite /wp-admin$ $scheme://$host$uri/ permanent;
	# 	rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
	# 	rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
	# }

	# WordPress Permalinks
	location / {
		# include the "?$args" part so non-default permalinks doesn't break when using query string
		try_files $uri $uri/ /index.php?$args;
	}

	#WPMU Files
	location ~ ^/files/(.*)$ {
		try_files /app/blogs.dir/$blogid/$uri /wp/wp-includes/ms-files.php?file=$1 ;
		access_log off; log_not_found off;      expires max;
	}

	#WPMU x-sendfile to avoid php readfile()
	location ^~ /blogs.dir {
		internal;
		alias /var/www/public/app/blogs.dir;
		access_log off;     log_not_found off;      expires max;
	}

	# This should match upload_max_filesize in php.ini
	client_max_body_size 150m;

}
